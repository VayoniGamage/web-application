name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout code from repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker Image
        run: docker build -t vtg22ug0392/web-project:latest .

      # Push the Docker image to DockerHub
      - name: Push Docker Image to DockerHub
        run: docker push vtg22ug0392/web-project:latest

      # Optional: Deploy to a server (using SSH)
      - name: Deploy to Server
        if: github.ref == 'refs/heads/main'
        run: |
          mkdir -p ~/.ssh
          echo "Server IP: ${{ secrets.SERVER_IP }}"
          # Ensure the server's SSH key is added to the known_hosts file
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
          
          # Verify if SSH connection works
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} "echo 'SSH Connection Successful'"

          # Pull the Docker image and run the container on the server
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_PRIVATE_KEY }} ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            docker pull vtg22ug0392/web-project:latest
            docker stop web-project || true
            docker rm web-project || true
            docker run -d -p 80:80 --name web-project vtg22ug0392/web-project:latest
          EOF
